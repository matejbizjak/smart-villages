server_name=n3-main

# Client port of 4222 on all interfaces
port: 4222

# HTTP monitoring port
monitor_port: 8222

jetstream {
}

tls {
  cert_file:  "etc/nats/certs/server-cert.pem"
  key_file:   "etc/nats/certs/server-key.pem"
  timeout:    2

  # Optional certificate authority for clients
  ca_file:   "etc/nats/certs/rootCA.pem"

  # Require a client certificate
  verify:    true
}

# This is for clustering multiple servers together.
cluster {
    name: main

    # Route connections to be received on any interface on port 6222
    port: 6222

    # Routes are protected, so need to use them with --routes flag
    # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
    authorization {
      user: ruser
      password: T0pS3cr3t
      timeout: 2
    }

    # Routes are actively solicited and connected to from this server.
    # This Docker image has none by default, but you can pass a
    # flag to the gnatsd docker image to create one to an existing server.
    routes = [
        nats-route://ruser:T0pS3cr3t@nats-n1-main:6222
        nats-route://ruser:T0pS3cr3t@nats-n2-main:6222
    ]
}
